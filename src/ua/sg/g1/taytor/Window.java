package ua.sg.g1.taytor;import javax.swing.*;import java.awt.Dimension;class Window extends JFrame {    private String viraz;    private Reader reader = new Reader();    Window(String title) {        super(title);        JPanel panel = new JPanel();        JTextField text = new JTextField();        JLabel lable = new JLabel("Enter number of letters: ");        JTextField numberOf = new JTextField();        JButton buttonOk = new JButton("OK");        JButton buttonNew = new JButton("NEW");        JLabel lable2 = new JLabel("                                                                                                     ");        JButton button = new JButton("Go!");        ImageIcon image = new ImageIcon("pics/pic.png");        JLabel labelPic = new JLabel();        button.setEnabled(false);        labelPic.setIcon(image);        labelPic.setPreferredSize(new Dimension(290,205));        button.setPreferredSize(new Dimension(400, 25));        numberOf.setPreferredSize(new Dimension(25, 25));        text.setPreferredSize(new Dimension(600, 20));        panel.add(lable);        panel.add(numberOf);        panel.add(buttonOk);        panel.add(lable2);        panel.add(text);        panel.add(button);        panel.add(buttonNew);        panel.add(labelPic);        add(panel);        buttonOk.addActionListener(e -> {button.setEnabled(true); reader.setNumber(Integer.parseInt(numberOf.getText()));            //showNumberTable();        });        buttonNew.addActionListener(e -> restart());        button.addActionListener(e -> {            viraz = text.getText();            reader.post(viraz.toCharArray());            //showTable();            newTable(getTable());            buttonNew.setEnabled(true);        });        setPreferredSize(new Dimension(640, 350));        setVisible(true);        setResizable(false);        pack();        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);    }    private JTable getTable(){        int index = (int)Math.pow(2,reader.getNumber()) ;        int count = reader.countIndex();        String[][] values = new String[index][reader.getNumber()+count];        String [] names = new String[reader.getNumber()+count];        String[][] valuesLetter =  reader.getPerestanovki();        String[][] valuesIn = reader.getresul();        String [] namesLetter = reader.getnamesofLatter();        String [] namesIn = reader.getNames();        for (int i = 0; i < index; i++) {            System.arraycopy(valuesLetter[i], 0, values[i], 0, reader.getNumber());        }        for (int i = 0; i < index; i++) {            int k=0;            for (int j = reader.getNumber(); j < reader.getNumber()+count; j++) {                values[i][j] = valuesIn[i][k];                k++;            }        }        System.arraycopy(namesLetter, 0, names, 0, reader.getNumber());        int z=0;        for (int i = reader.getNumber(); i < reader.getNumber()+count; i++) {            names[i]=namesIn[z];            z++;        }        return new JTable(values,names);    }    private void newTable(JTable table){        JFrame numberFrame = new JFrame();        JPanel numberPanel = new JPanel();        JScrollPane scrollPane = new JScrollPane(table);        numberPanel.add(scrollPane);        numberFrame.add(numberPanel);        table.setFillsViewportHeight(false);        numberFrame.setPreferredSize(new Dimension(500, 400));        numberFrame.setVisible(true);        numberFrame.pack();        numberFrame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);    }    private void restart(){        dispose();        new Window("wind");    }}